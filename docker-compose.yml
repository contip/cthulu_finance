version: "3.8"
services:
  postgres:
    container_name: "${POSTGRES_DB}_postgres"
    image: postgres:11
    volumes:
      - "/data/${POSTGRES_DB}/postgres:/data/${POSTGRES_DB}/postgres"
    env_file:
      - .env
    networks:
      - backend

  pgadmin:
    links:
      - postgres
    container_name: "${POSTGRES_DB}_pgadmin"
    image: dpage/pgadmin4
    volumes:
      - "/data/${POSTGRES_DB}/pgadmin:/root/${POSTGRES_DB}/.pgadmin"
    env_file:
      - .env
    networks:
      - backend
      - frontend

  app:
    container_name: "${POSTGRES_DB}_app"
    build:
      context: ./
      dockerfile: Dockerfile
    networks:
      - backend
      - frontend
    env_file:
      - .env
    restart: on-failure
    links:
      - postgres
    command: "npm run start:dist"
    volumes:
      - "/data/${POSTGRES_DB}/app:/data/${POSTGRES_DB}/app"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.${POSTGRES_DB}.loadbalancer.server.port=${PORT}"
      - "traefik.http.routers.${POSTGRES_DB}.rule=Host(`${EXT_URL}`)"
      - "traefik.http.routers.${POSTGRES_DB}.entrypoints=web,websecure"
      - "traefik.http.routers.${POSTGRES_DB}.tls=true"
      - "traefik.http.routers.${POSTGRES_DB}.tls.certresolver=myresolver"
      - "traefik.http.routers.${POSTGRES_DB}.tls.domains[0].main=`${EXT_BASE_URL}`"
      - "traefik.http.routers.${POSTGRES_DB}.tls.domains[0].sans=`${EXT_URL}`"

networks:
  backend:
    external: true
  frontend:
    external: true
